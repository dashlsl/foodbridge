<?php

namespace App\Controllers;

if (!defined('ACCESS')) {
    http_response_code(404);
    die();
}

use App\Models\UserModel;
use App\Models\DonationModel;
use App\Models\VolunteerModel;
use App\Views\ViewManager;
use App\Helpers\AjaxHelper;
use App\Models\ValidateModel;

class UserController
{
    // Registration
    public function registerView()
    {
        return ViewManager::renderView('registerview');
    }

    public function register()
    {
        $role = $_POST['role'];
        $name = $_POST['name'];
        $email = $_POST['email'];
        $pwd = $_POST['password'];
        $phone = $_POST['phone'] ?? null;

        $um = new UserModel;
        $result = $um->register($role, $name, $email, $pwd, $phone);
        $flag = !is_array($result);

        AjaxHelper::sendResponse($flag, $result);
    }

    // Login
    public function loginView()
    {
        return ViewManager::renderView('loginview');
    }

    public function login()
    {
        $email = $_POST['email'];
        $pwd = $_POST['password'];

        $um = new UserModel;
        $result = $um->login($email, $pwd);
        $flag = !is_array($result);

        AjaxHelper::sendResponse($flag, $result);
    }

    public function logout()
    {
        $um = new UserModel();
        $um->logout();

        header('Location: /foodbridge/login');
        die();
    }

    public function editProfileView()
    {
        if (!ValidateModel::validateLogin()) {
            header('Location: /foodbridge/login');
            die();
        }

        $userId = UserModel::getCurUserId();

        $um = new UserModel;
        $user = $um->getUserById($userId);

        $params['user'] = $user;

        return ViewManager::renderView(
            'editprofileview', 
            $params, 
            ['publicnav', 'sidepublicnav']);
    }

    public function updateProfile()
    {
        $userId = UserModel::getCurUserId();
        $userName = $_POST['user-name'];

        $um = new UserModel();
        $result = $um->updateProfile($userId, $userName);
        $flag = !is_array($result);

        AjaxHelper::sendResponse($flag, $result);
    }

    public function updatePassword()
    {
        $userId = UserModel::getCurUserId();
        $currentPwd = $_POST['cur-pwd'];
        $newPwd = $_POST['new-pwd'];
        $confirmPwd = $_POST['confirm-pwd'];

        $um = new UserModel();
        $result = $um->updatePwd($userId, $currentPwd, $newPwd, $confirmPwd);
        $flag = !is_array($result);

        AjaxHelper::sendResponse($flag, $result);
    }


    ////

    public function donationsView()
    {
        if (!ValidateModel::validateLogin()) {
            header('Location: /login');
            die();
        }

        $userId = UserModel::getCurUserId();

        $dm = new DonationModel();
        $donations = $dm->getDonationsByUserId($userId);

        $params['donations'] = $donations;

        return ViewManager::renderView('donationsview', $params);
    }

    public function volunteerView()
    {
        if (!ValidateModel::validateLogin()) {
            header('Location: /login');
            die();
        }

        $userId = UserModel::getCurUserId();

        $vm = new VolunteerModel();
        $volunteers = $vm->getVolunteersByUserId($userId);

        $params['volunteers'] = $volunteers;

        return ViewManager::renderView('volunteerview', $params);
    }
}
