<?php

namespace App\Models;

if (!defined('ACCESS')) {
    http_response_code(404);
    die();
}

use PDO;
use App\Models\DatabaseModel;

class VolunteerModel
{
    /** Get all available deliveries for a volunteer */
    public function getAvailableDeliveries($volunteerId)
    {
        $sql = <<<SQL
            SELECT
                fdn.donation_id, fdn.food_description, fdn.quantity, fdn.pickup_time, fdn.status,
                fdv.delivery_id, fdv.receiver_id, r.organization_name,
                fdv.pickup_status, fdv.delivery_status
            FROM
                food_donations fdn
            JOIN
                food_delivery fdv ON fd.donation_id = fdc.donation_id
            JOIN
                food_receivers r ON fdc.receiver_id = r.receiver_id
            WHERE
                fdc.volunteer_id IS NULL AND fdc.pickup_status = 'pending'
            ORDER BY
                fd.pickup_time ASC
        SQL;

        $params = [
            ':volunteer_id' => $volunteerId
        ];

        return DatabaseModel::exec($sql, $params)->fetchAll(PDO::FETCH_ASSOC);
    }

    /** Volunteer selects a delivery */
    public function assignVolunteerToDelivery($deliveryId, $volunteerId)
    {
        $sql = <<<SQL
            UPDATE
                food_delivery
            SET
                volunteer_id = :volunteer_id,
                pickup_status = 'in_progress'
            WHERE
                delivery_id = :delivery_id
        SQL;

        $params = [
            ':volunteer_id' => $volunteerId,
            ':delivery_id' => $deliveryId
        ];

        DatabaseModel::exec($sql, $params);

        return true;
    }

    /** Get volunteer pickup tasks */
    public function getPickupTasks($volunteerId)
    {
        $sql = <<<SQL
            SELECT
                fd.donation_id, fd.food_description, fd.quantity, fd.pickup_time, fd.status AS donation_status,
                fdc.pickup_status, fdc.delivery_status
            FROM
                food_donations fd
            JOIN
                food_delivery fdc ON fd.donation_id = fdc.donation_id
            WHERE
                fdc.volunteer_id = :volunteer_id AND fdc.pickup_status IN ('pending', 'in_progress')
            ORDER BY
                fd.pickup_time ASC
        SQL;

        $params = [
            ':volunteer_id' => $volunteerId
        ];

        return DatabaseModel::exec($sql, $params)->fetchAll(PDO::FETCH_ASSOC);
    }

    /** Get volunteer delivery tasks */
    public function getDeliveryTasks($volunteerId)
    {
        $sql = <<<SQL
            SELECT
                fd.donation_id, fd.food_description, fd.quantity, fd.pickup_time, fd.status AS donation_status,
                fdc.delivery_time, fdc.delivery_status
            FROM
                food_donations fd
            JOIN
                food_delivery fdc ON fd.donation_id = fdc.donation_id
            WHERE
                fdc.volunteer_id = :volunteer_id AND fdc.delivery_status = 'scheduled'
            ORDER BY
                fdc.delivery_time ASC
        SQL;

        $params = [
            ':volunteer_id' => $volunteerId
        ];

        return DatabaseModel::exec($sql, $params)->fetchAll(PDO::FETCH_ASSOC);
    }

    /** Update pickup status */
    public function updatePickupStatus($deliveryId, $status)
    {
        $sql = <<<SQL
            UPDATE
                food_delivery
            SET
                pickup_status = :pickup_status
            WHERE
                delivery_id = :delivery_id
        SQL;

        $params = [
            ':pickup_status' => $status,
            ':delivery_id' => $deliveryId
        ];

        DatabaseModel::exec($sql, $params);

        return true;
    }

    /** Update delivery status */
    public function updateDeliveryStatus($deliveryId, $status)
    {
        $sql = <<<SQL
            UPDATE
                food_delivery
            SET
                delivery_status = :delivery_status
            WHERE
                delivery_id = :delivery_id
        SQL;

        $params = [
            ':delivery_status' => $status,
            ':delivery_id' => $deliveryId
        ];

        DatabaseModel::exec($sql, $params);

        return true;
    }

    /** Get volunteer details by user ID */
    public function getVolunteerByUserId($userId)
    {
        $sql = <<<SQL
            SELECT
                *
            FROM
                users
            WHERE
                user_id = :user_id AND role = 'volunteer'
        SQL;

        $params = [
            ':user_id' => $userId
        ];

        return DatabaseModel::exec($sql, $params)->fetch(PDO::FETCH_ASSOC);
    }

    /** Get all volunteers */
    public function getAllVolunteers()
    {
        $sql = <<<SQL
            SELECT
                *
            FROM
                users
            WHERE
                role = 'volunteer'
        SQL;

        return DatabaseModel::exec($sql)->fetchAll(PDO::FETCH_ASSOC);
    }
}
